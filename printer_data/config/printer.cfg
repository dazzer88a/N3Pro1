[include fluidd.cfg]
[include shell_command.cfg]
# For the ZNP Robin Nano DW v2.2 board:
#   - Compile with the processor model STM32F401.
#   - Select the 32KiB bootloader,
#   - Select (Serial (on # USART1 PA10/PA9) for the communication interface.
#   - Select (Serial (on # USART2 PA3/PA2) if you want to use the serial UART pins on J17 (wifi section)
# Note that the "make flash" command does not work with ZNP Robin boards. After running "make", run the following command:
# cp out/klipper.bin out/ZNP_ROBIN_NANO.bin
#
# Copy the file out/ZNP_ROBIN_NANO.bin to an SD card and then restart the printer with that SD card.
# See docs/Config_Reference.md for a description of parameters.

#[include timelapse.cfg]
[include macros.cfg]
# [include config_backup.cfg] # - DCM Added 2023-08-05 - Voron GitHub Backup Config scritps
[include KAMP_Settings.cfg] # - DCM Added 2023-12-12 - Klipper Adaptive Mesh Leveling - KAMP

[exclude_object]
[virtual_sdcard]
path: ~/printer_data/gcodes

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[mcu]
serial: /dev/ttyUSB0
restart_method: command

[mcu CB1]
serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: CB1:None
# spi_bus: spidev1.1
# axes_map: z,y,-x

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#    117, 117, 50  # an example

[led LED_Light]
white_pin: PB9
#initial_white: 1.0 # LIGHT ON At Satrtup
initial_white: 0.0

#[output_pin LED_Light] #toggle for LED Light - use this instead of [LED] for sonic pad
#Pin: PB9
#cycle_time: 0.01
#pwm: true
#value: 1

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 4100
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity: 5
# Use those higher values just to configure Input Shaper 
#max_accel: 10000
max_accel_to_decel: 3000

[stepper_x]
step_pin: !PC12
dir_pin: PB3
enable_pin: !PD2
microsteps: 16
rotation_distance: 40
endstop_pin: PA13
position_endstop: -6.0
position_min: -6
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PC11
dir_pin: PA15
enable_pin: !PC10
microsteps: 16
rotation_distance: 40
endstop_pin: PB8
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PC7
dir_pin: !PC9
enable_pin: !PC8
rotation_distance: 8
microsteps: 16
position_min: -2
position_max: 280
endstop_pin: probe:z_virtual_endstop # Use Z- as endstop
homing_speed: 5.0


[extruder]
max_extrude_only_distance: 100.0
step_pin: PB10
dir_pin: PB1
enable_pin: !PC6
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: 0
max_temp: 250
# Calibrate E-Steps https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders
# rotation_distance: 6.9
# rotation_distance: 7.65 # As calc on 14/6/23
# rotation_distance: 7.69564 # As calc on 6/10/23
rotation_distance: 7.793 # As calc on 7/12/23

# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#  - Example: PID_CALIBRATE HEATER=extruder TARGET=200 - updated DCM 2023-10-06
#control = pid
#pid_kp = 27.788
#pid_ki = 1.684
#pid_kd = 114.626
# Calibrate PA: https://www.klipper3d.org/Pressure_Advance.html
# Updated PA - DCM 2023-10-06
# pressure_advance = 0.1429
pressure_advance = 0.075



[heater_bed]
heater_pin: PA5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
pwm_cycle_time: 0.020 # set to 0.0166 if your grid runs on 60Hz to fix lights flickering
max_temp: 110
min_temp: 0
# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#  - Example: PID_CALIBRATE HEATER=heater_bed TARGET=60 - updated DCM 2023-10-06
#control = pid
#pid_kp = 65.731
#pid_ki = 0.891
#pid_kd = 1212.737

[heater_fan hotend_fan]
pin: PB0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA7

[force_move]
enable_force_move: True

[safe_z_home]
home_xy_position: 117.5, 117.5
z_hop: 10

[probe]
pin: ^PA8
speed: 5
lift_speed: 15
samples: 1
x_offset: -28
y_offset: 20
# Calibrate probe: https://www.klipper3d.org/Bed_Level.html
# - Example: PROBE_CALIBRATE, then adjust with TESTZ Z=+/-X
#z_offset = -0.100

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: PB4

[bed_mesh]
speed: 300
horizontal_move_z: 5.0
mesh_min: 30,30
mesh_max: 205,205
probe_count: 6,6
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[input_shaper]
# Calibrate IS: https://www.klipper3d.org/Resonance_Compensation.html
# Updated 2023-10-06 - DCM
#shaper_type_y = mzv
#shaper_freq_y = 39.2
#shaper_type_x = zv
#shaper_freq_x = 84.6
shaper_freq_x: 59.6
shaper_type_x: mzv
shaper_freq_y: 37.2
shaper_type_y: mzv

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
#min_temp: 10
#max_temp: 105

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
sensor_temperature1: 25
sensor_adc1: 0.210317
#min_temp: 0
#max_temp: 105

[skew_correction] 

[gcode_macro M420]
description: Load the current mesh
gcode:
  BED_MESH_PROFILE LOAD=default
  
[gcode_macro G29]
description: creates automated homing and bed mesh
gcode:
  G28
  BED_MESH_CALIBRATE
#  DATA_SAVE - commentwed out DCM 2023-10-13

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(58)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(195)|float %}
    
	# - KAMP Additions 2023-12-12

	SMART_PARK # - Added DCM 2023-12-12 as part of KAMP processing
    
	# Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP} # Added/changed - DCM 2023-07-31
    # Wait for bed to reach temperature
    M190 S{BED_TEMP} # Added/changed - DCM 2023-07-31	
    
	# - KAMP Additions 2023-12-12
    
	BED_MESH_CALIBRATE # - Executes KAMP Features
    	
    # Reset the G-Code Z offset (adjust Z offset if needed)
    
	SET_GCODE_OFFSET Z=0.0
	   
	# - KAMP Additions 2023-12-12

    # LINE_PURGE # - Added DCM 2023-12-12 as part of KAMP processing

    # VORON_PURGE # - Added DCM 2023-12-12 as part of KAMP processing
    
    # Reset extruder 
    G92 E0
 
[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(10)|float %}
    {% set Y = params.Y|default(10)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-100 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 1.630
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.891
#*# pid_ki = 1.403
#*# pid_kd = 119.421
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.914
#*# pid_ki = 0.894
#*# pid_kd = 1178.182
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.045000, 0.037500, 0.030000, 0.022500, 0.012500
#*# 	  0.005000, 0.002500, 0.002500, -0.015000, -0.022500
#*# 	  -0.002500, -0.007500, -0.017500, -0.037500, -0.035000
#*# 	  0.012500, 0.007500, 0.002500, -0.007500, -0.005000
#*# x_count = 5
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 57.5
#*# max_x = 177.5
#*# min_y = 80.75
#*# max_y = 154.25
#*#
#*# [input_shaper]
#*#
#*# [bed_mesh fullbed]
#*# version = 1
#*# points =
#*# 	0.082500, 0.077500, 0.075000, 0.057500, 0.090000, 0.117500
#*# 	0.052500, 0.072500, 0.085000, 0.085000, 0.110000, 0.112500
#*# 	0.055000, 0.082500, 0.090000, 0.067500, 0.090000, 0.090000
#*# 	0.000000, 0.035000, 0.052500, 0.040000, 0.072500, 0.077500
#*# 	0.012500, 0.042500, 0.047500, 0.037500, 0.057500, 0.060000
#*# 	0.027500, 0.037500, 0.057500, 0.065000, 0.092500, 0.107500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 205.0
#*# min_y = 30.0
#*# max_y = 205.0
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = 0.000299598460041541
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [bed_mesh test]
#*# version = 1
#*# points =
#*# 	0.045000, 0.010000, -0.017500, -0.052500, -0.052500, -0.027500
#*# 	0.032500, 0.015000, -0.012500, -0.050000, -0.065000, -0.092500
#*# 	0.010000, 0.012500, -0.005000, -0.042500, -0.042500, -0.060000
#*# 	0.030000, 0.032500, 0.010000, -0.035000, -0.047500, -0.070000
#*# 	0.015000, 0.002500, -0.002500, -0.030000, -0.030000, -0.035000
#*# 	0.087500, 0.050000, 0.032500, 0.010000, 0.010000, 0.000000
#*# min_x = 30.0
#*# max_x = 205.0
#*# min_y = 30.0
#*# max_y = 205.0
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
